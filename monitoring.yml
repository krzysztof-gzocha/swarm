version: '3.6'

services:
  prometheus:
    image: prom/prometheus:v2.20.1
    container_name: prometheus
    restart: unless-stopped
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - "9090"
    security_opt:
      - no-new-privileges:true
    networks:
      - traefik-public # only to scrape Traefik metrics as well
      - monitoring
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro,rslave
      - prometheusData:/prometheus
    command: [
      "--storage.tsdb.retention.time=3d",
      "--config.file=/etc/prometheus/prometheus.yml",
      "--storage.tsdb.path=/prometheus",
      "--web.console.libraries=/",
    ]
    labels:
      # No need to access Prometheus from outside world,
      # but if required change and ucomment all labels
      - "traefik.enable=false"
#      - "traefik.http.routers.safe-prometheus.entrypoints=https"
#      - "traefik.http.routers.safe-prometheus.tls=true"
#      - "traefik.http.routers.safe-prometheus.rule=Host(`prometheus.${SWARM_HOST}`)"
#      - "traefik.http.routers.safe-prometheus.middlewares=secured@file"
#      - "traefik.http.routers.unsafe-prometheus.tls=false"
#      - "traefik.http.routers.unsafe-prometheus.entrypoints=http"
#      - "traefik.http.routers.unsafe-prometheus.middlewares=redirect-to-https@file,small-rate-limit@file"
#      - "traefik.http.routers.unsafe-prometheus.rule=Host(`prometheus.${SWARM_HOST}`)"

  grafana:
    image: grafana/grafana:7.1.5
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000"
    security_opt:
      - no-new-privileges:true
    networks:
      - traefik-public
    volumes:
      - grafana:/etc/grafana
      - grafanaPlugins:/var/lib/plugins
    environment:
      - "GF_INSTALL_PLUGINS=grafana-piechart-panel"
      - "TZ=${SWARM_TZ}"
    depends_on:
      - prometheus
      - traefik
    deploy:
      mode: replicated
      replicas: 1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.safe-grafana.entrypoints=https"
      - "traefik.http.routers.safe-grafana.tls=true"
      - "traefik.http.routers.safe-grafana.rule=Host(`grafana.${SWARM_HOST}`)"
      - "traefik.http.routers.safe-grafana.middlewares=secured@file"
      - "traefik.http.routers.unsafe-grafana.tls=false"
      - "traefik.http.routers.unsafe-grafana.entrypoints=http"
      - "traefik.http.routers.unsafe-grafana.middlewares=redirect-to-https@file,small-rate-limit@file"
      - "traefik.http.routers.unsafe-grafana.rule=Host(`grafana.${SWARM_HOST}`)"

  docker_exporter:
    image: prometheusnet/docker_exporter
    restart: unless-stopped
    container_name: docker_exporter
    ports:
      - "9417"
    security_opt:
      - no-new-privileges:true
    networks:
      - monitoring
    depends_on:
      - prometheus
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  node_exporter:
    image: prom/node-exporter
    restart: unless-stopped
    container_name: node_exporter
    user: "995:995"
    ports:
      - "9100"
    security_opt:
      - no-new-privileges:true
    networks:
      - monitoring
    depends_on:
      - prometheus
    volumes:
      - /:/hostfs:ro,rslave
    command: ["--path.rootfs=/hostfs"]

  blackbox_exporter:
    container_name: blackbox_exporter
    restart: unless-stopped
    image: prom/blackbox-exporter:v0.17.0
    ports:
      - "9115:9115"
    security_opt:
      - no-new-privileges:true
    networks:
      - monitoring
    depends_on:
      - prometheus
    volumes:
      - ./config/blackbox.yml:/config/blackbox.yml:ro
    command: --config.file=/config/blackbox.yml
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager

networks:
  monitoring:

volumes:
  prometheusData:
  grafana:
  grafanaPlugins:
